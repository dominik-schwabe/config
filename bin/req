#!/usr/bin/env python3
import json

import argparse
import requests

parser = argparse.ArgumentParser()
parser.add_argument("--json", default=None)
parser.add_argument("--method", default=None)
parser.add_argument("--route", type=str, default="")
parser.add_argument("--port", type=int, default=5000)
parser.add_argument("--base", type=str, default="http://localhost")
parser.add_argument("--origin", type=str, default="http://localhost:3000")
parser.add_argument("--show-input", action="store_true")
parser.add_argument("--show-output", action="store_true")
args = parser.parse_args()

if args.method is not None:
    method = args.method.upper()
elif args.json is None:
    method = "GET"
else:
    method = "POST"

kwargs = {
    "method": method,
    "url": f"{args.base}:{args.port}{args.route}",
    "headers": {"origin": args.origin},
}

if args.json is not None:
    kwargs["json"] = json.loads(args.json)

if args.show_input:
    print(json.dumps(kwargs), end="\n")
    print("\n")

try:
    r = requests.request(**kwargs, stream=True)
    for line in r.iter_lines():
        print(line.decode())
    print("\n")
    if args.show_output or not 200 <= r.status_code < 300:
        print(
            json.dumps(
                {
                    "code": r.status_code,
                    "method": method,
                    "headers": dict(r.headers),
                }
            )
        )
except requests.exceptions.ConnectionError:
    print(f"{kwargs['url']} unreachable")
