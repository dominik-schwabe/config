local dap = require("dap")
local dapui = require("dapui")
local dap_python = require("dap-python")
local dap_virtual_text = require("nvim-dap-virtual-text")

dapui.setup()
dap_virtual_text.setup()

dap_python.setup(vim.g.python3_host_prog)

dap.listeners.after.event_initialized["dapui_config"] = function()
  dapui.open()
end
dap.listeners.before.event_terminated["dapui_config"] = function()
  dapui.close()
end
dap.listeners.before.event_exited["dapui_config"] = function()
  dapui.close()
end

vim.api.nvim_create_user_command("DapPythonMethod", function()
  dap_python.test_method()
end, {})
vim.api.nvim_create_user_command("DapPythonClass", function()
  dap_python.test_class()
end, {})
vim.api.nvim_create_user_command("DapPythonSelection", function()
  dap_python.debug_selection()
end, {})

vim.api.nvim_create_user_command("DapBreakpoint", function()
  dap.toggle_breakpoint()
end, {})
vim.api.nvim_create_user_command("DapConditionalBreakpoint", function()
  dap.set_breakpoint(vim.fn.input("Breakpoint condition: "))
end, {})
vim.api.nvim_create_user_command("DapContinue", function()
  dap.continue()
end, {})
vim.api.nvim_create_user_command("DapStepOver", function()
  dap.step_over()
end, {})
vim.api.nvim_create_user_command("DapStepInto", function()
  dap.step_into()
end, {})
vim.api.nvim_create_user_command("DapStepInto", function()
  dap.step_out()
end, {})
vim.api.nvim_create_user_command("DapTerminate", function()
  dap.terminate()
end, {})
